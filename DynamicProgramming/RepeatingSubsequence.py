"""
Given a string A, find if there is any subsequence that repeats itself.
A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.
NOTE: Sub-sequence length should be greater than or equal to 2.
"""
#remove non-repeating charecter and if string is not a palindrome then obviously repeated subsequence(2 or more)

class Solution:
    #@param A : string
    #@return 1 or 0 -> if repeated subsequence exist 1 else 0
    def anytwo(self, A):
        one, two = set(), set()
        for i in A:
            if i not in one and i not in two:
                one.add(i)
            elif i in one:
                one.remove(i)
                two.add(i)
        print(one, two)
        i = 0
        A = list(A)
        while i < len(A):
            if A[i] in one:
                A.pop(i)
            else: i+=1
        if len(set(A)) == 1 and len(A) > 2: return 1
        print(A)
        for i in range(len(A)//2):
            if A[i] != A[len(A)-i-1]: return 1
        return 0

t = Solution()
A = "aaaa"
print(t.anytwo(A))